<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    注册bean-->
    <bean id="userService" class="com.gullon.service.UserServiceImpl"/>
    <bean id="log" class="com.gullon.log.Log"/>
    <bean id="afterlog" class="com.gullon.log.AfterLog"/>

<!--    使用原生的spring api接口-->
<!--    配置aop，需要导入aop的约束-->
<!--    <aop:config>-->
<!--&lt;!&ndash;        切入点，expression：表达式，execution（要执行的位置！ 修饰词 返回值 类名 方法名 参数 (..)两个点代表可以为任意参数&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.gullon.service.UserServiceImpl.*(..))"/>-->

<!--&lt;!&ndash;        执行环绕增加！&ndash;&gt;-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterlog"  pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

<!--    方式二-->
<!--    <bean id="diy" class="com.gullon.Diy.Diy"/>-->
<!--    <aop:config>-->
<!--&lt;!&ndash;        自定义切面，ref要引用的类&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--&lt;!&ndash;            切入点&ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.gullon.service.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;            通知&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

<!--    方式三-->
    <bean id="annotationPointCut" class="com.gullon.Diy.AnnotationPointCut"/>
<!--    开启注解支持！ jdk（默认proxy-target-class="false"） cglib（proxy-target-class="true"）-->
    <aop:aspectj-autoproxy proxy-target-class="false"/>

</beans>